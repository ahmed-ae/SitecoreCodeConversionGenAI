generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  preferences   UserPreference?
  profile       UserProfile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserPreference {
  id       String @id @default(cuid())
  userId   String @unique
  language String @default("scriban")
  model    String @default("claude3sonnet")
  customInstructions String?
  lastCodeUsed String?
  CountUsage Int @default(0)
  maxTries Int @default(25)
  framework String @default("nextjs")  
  styling   String @default("tailwind") 
  enableFigma Boolean @default(false)
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  githubRepos Json
  user        User     @relation(fields: [userId], references: [id])
}
